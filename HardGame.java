import java.awt.Desktop;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.net.URI;


public class HardGame extends javax.swing.JFrame {
 
    private int numberToGuess = 783;
    private int NumAttempts = 0;
    private int TimeRemaining = 15;
    private int score = 0;
    private Timer timer;
    private boolean gameOver = false;
   
    public HardGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TimeLabel = new javax.swing.JLabel();
        EasyGameAttempts = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        HardGameGuessBtn = new javax.swing.JButton();
        NumberTextField = new javax.swing.JTextField();
        ResultLabel = new javax.swing.JLabel();
        HardGameReplayBtn = new javax.swing.JButton();
        scoreLabel = new javax.swing.JLabel();
        VideoAd = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel1.setText("NUMBER:");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(488, 336));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        TimeLabel.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        TimeLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0), 2));

        EasyGameAttempts.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel2.setText("NUMBER:");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0), 2));

        HardGameGuessBtn.setBackground(new java.awt.Color(255, 153, 0));
        HardGameGuessBtn.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        HardGameGuessBtn.setText("GUESS");
        HardGameGuessBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HardGameGuessBtnActionPerformed(evt);
            }
        });

        NumberTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0), 2));
        NumberTextField.setPreferredSize(new java.awt.Dimension(521, 368));
        NumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberTextFieldActionPerformed(evt);
            }
        });

        ResultLabel.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N

        HardGameReplayBtn.setBackground(new java.awt.Color(255, 153, 0));
        HardGameReplayBtn.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        HardGameReplayBtn.setText("TRY AGAIN");
        HardGameReplayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HardGameReplayBtnActionPerformed(evt);
            }
        });

        scoreLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        VideoAd.setBackground(new java.awt.Color(255, 102, 0));
        VideoAd.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        VideoAd.setText("VIDEO AD");
        VideoAd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VideoAdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VideoAd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HardGameReplayBtn)
                .addGap(14, 14, 14))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EasyGameAttempts, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scoreLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HardGameGuessBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(ResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(EasyGameAttempts, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(scoreLabel)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HardGameGuessBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(ResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HardGameReplayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VideoAd))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumberTextFieldActionPerformed

    private void HardGameGuessBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HardGameGuessBtnActionPerformed

      int guess = Integer.parseInt(NumberTextField.getText());

      String input = NumberTextField.getText().trim();
      if(input.isEmpty()){
          JOptionPane.showMessageDialog(null, "Please enter a number!");
          return;
      }
      
      try{
          int number = Integer.parseInt(input);
          if(number<1|| number>1000){
              JOptionPane.showMessageDialog(null,"Number must be between 1 and 1000!" );
              return;
          }
          System.out.println("Valid input:" + number);
      }catch(NumberFormatException ex){
          JOptionPane.showMessageDialog(this, "Invalid input, Please enter a number");
      }
      
      
        if(guess<numberToGuess){
            ResultLabel.setText("Too Low!");
            scoreLabel.setText("Score: " + score);
        }
        else if(guess>numberToGuess){
            ResultLabel.setText("Too High!");
            scoreLabel.setText("Score: " + score);
        }

        else{
            ResultLabel.setText("Congratulations! You guessed it Right!");
            score += 10;
            scoreLabel.setText("Score: "+ score);
            timer.stop();
            HardGameReplayBtn.setEnabled(false);
            VideoAd.setEnabled(false);
            

            
            
    }                                                  

      NumAttempts--;
   EasyGameAttempts.setText("Attempts Remaining: "+ NumAttempts);
   
   if(NumAttempts == 0){
       HardGameGuessBtn.setEnabled(false);
       gameOver = true;
   }
   
   TimeRemaining--;
   TimeLabel.setText("Time Remaining: " + TimeRemaining + "seconds");
   
   if(NumAttempts==0){
            
            HardGameGuessBtn.setEnabled(false);
            ResultLabel.setText("");
            NumberTextField.setText("");
         JOptionPane.showMessageDialog(null, "Game Over!, Watch Ad for 3 more attempts!");
        }
   
   if(TimeRemaining == 0){
       JOptionPane.showMessageDialog(null, "Time's Up!. Game Over!");
       System.exit(0);
   } 

    }//GEN-LAST:event_HardGameGuessBtnActionPerformed

    private void HardGameReplayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HardGameReplayBtnActionPerformed
        // TODO add your handling code here:

        if(gameOver){
            
           
         JOptionPane.showMessageDialog(null, "Game Over! You can't replay");
        }
       

    }//GEN-LAST:event_HardGameReplayBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
         timer = new Timer(1000, new ActionListener(){
            @Override 
            public void actionPerformed(ActionEvent e){
                TimeRemaining--;
                TimeLabel.setText("Time Remaining: "+ TimeRemaining + "seconds");
                
                if(TimeRemaining == 0){
                    HardGameGuessBtn.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Times Up! Game Over!");
                  gameOver = true;
                }
            }
        });
        timer.start();
                   
    }//GEN-LAST:event_formWindowOpened

    private void VideoAdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VideoAdActionPerformed
        // TODO add your handling code here:
        
           Desktop desktop = Desktop.isDesktopSupported()?
                Desktop.getDesktop() : null;
        if(desktop != null && desktop.isSupported(Desktop.Action.BROWSE)){
        try{
            URI uri = new URI("");
            desktop.browse(uri);
            NumAttempts += 3;
            
            EasyGameAttempts.setText("Attempts Remaining: "+ NumAttempts);
            HardGameGuessBtn.setEnabled(true);
            ResultLabel.setText("");
            
        }catch(Exception e ){
            JOptionPane.showMessageDialog(null,"Error opening Video");
        }
    }//GEN-LAST:event_VideoAdActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HardGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HardGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HardGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HardGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HardGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EasyGameAttempts;
    private javax.swing.JButton HardGameGuessBtn;
    private javax.swing.JButton HardGameReplayBtn;
    private javax.swing.JTextField NumberTextField;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JButton VideoAd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel scoreLabel;
    // End of variables declaration//GEN-END:variables
}
